
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x5d8
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208        0x0 main.o
 .text.startup  0x0000000000000208        0x8 main.o
                0x0000000000000208                main
 .text          0x0000000000000210      0x3c8 soc-hw.o
                0x0000000000000210                tic_isr
                0x0000000000000244                isr_null
                0x0000000000000248                pwm_read
                0x0000000000000260                pwm_rd
                0x000000000000027c                pwm_addr
                0x0000000000000294                pwm_wr
                0x00000000000002b0                pwm_din
                0x00000000000002c8                gpio_config_dir
                0x00000000000002e0                gpio_write
                0x00000000000002f8                gpio_read
                0x0000000000000310                irq_handler
                0x000000000000036c                isr_init
                0x0000000000000398                isr_register
                0x00000000000003b4                isr_unregister
                0x00000000000003dc                msleep
                0x0000000000000418                nsleep
                0x000000000000044c                tic_init
                0x00000000000004a0                uart_init
                0x00000000000004a4                uart_getchar
                0x00000000000004cc                uart_putchar
                0x00000000000004f4                uart_putstr
                0x000000000000052c                i2c_init
                0x0000000000000554                i2c_write
                0x00000000000005d8                _etext = .

.rodata         0x00000000000005d8       0x6c
                0x00000000000005d8                . = ALIGN (0x4)
                0x00000000000005d8                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x00000000000005d8       0x6c soc-hw.o
 *(.rodata1)
                0x0000000000000644                _erodata = .

.data           0x0000000000000644       0x18
                0x0000000000000644                . = ALIGN (0x4)
                0x0000000000000644                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000644        0x0 crt0ram.o
 .data          0x0000000000000644        0x0 main.o
 .data          0x0000000000000644       0x18 soc-hw.o
                0x0000000000000644                pwm
                0x0000000000000648                i2c0
                0x000000000000064c                spi0
                0x0000000000000650                gpio0
                0x0000000000000654                timer0
                0x0000000000000658                uart0
 *(.data1)
                0x0000000000000660                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x000000000000065c                _edata = .

.bss            0x000000000000065c       0x84
                0x000000000000065c                . = ALIGN (0x4)
                0x000000000000065c                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000000065c        0x0 crt0ram.o
 .bss           0x000000000000065c        0x0 main.o
 .bss           0x000000000000065c        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x000000000000065c       0x84 soc-hw.o
                0x000000000000065c                isr_table
                0x00000000000006dc                tic_msec
                0x00000000000006e0                _ebss = .
                0x00000000000006e0                _end = .
                0x0000000000000ffc                PROVIDE (_fstack = ((ORIGIN (ram) + LENGTH (ram)) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_frame    0x0000000000000000      0x1bc
 .debug_frame   0x0000000000000000       0x24 main.o
 .debug_frame   0x0000000000000024      0x198 soc-hw.o

.debug_info     0x0000000000000000      0x875
 .debug_info    0x0000000000000000      0x1f6 main.o
 .debug_info    0x00000000000001f6      0x67f soc-hw.o

.debug_abbrev   0x0000000000000000      0x2f2
 .debug_abbrev  0x0000000000000000       0xae main.o
 .debug_abbrev  0x00000000000000ae      0x244 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_ranges   0x0000000000000000       0x28
 .debug_ranges  0x0000000000000000       0x10 main.o
 .debug_ranges  0x0000000000000010       0x18 soc-hw.o

.debug_line     0x0000000000000000      0x4df
 .debug_line    0x0000000000000000       0x4e main.o
 .debug_line    0x000000000000004e      0x491 soc-hw.o

.debug_str      0x0000000000000000      0x351
 .debug_str     0x0000000000000000      0x15a main.o
                                        0x19e (size before relaxing)
 .debug_str     0x000000000000015a      0x1f7 soc-hw.o
                                        0x2f1 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 soc-hw.o

.debug_loc      0x0000000000000000      0x15e
 .debug_loc     0x0000000000000000      0x15e soc-hw.o
